(()=>{"use strict";var e={882:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getPreviousSibling=t.getNextSibling=t.removeNodes=t.createStylesheet=void 0;var r=n(11);Object.defineProperty(t,"createStylesheet",{enumerable:!0,get:function(){return r.createStylesheet}});var i=n(141);Object.defineProperty(t,"removeNodes",{enumerable:!0,get:function(){return i.removeNodes}});var o=n(89);Object.defineProperty(t,"getNextSibling",{enumerable:!0,get:function(){return o.getNextSibling}});var s=n(457);Object.defineProperty(t,"getPreviousSibling",{enumerable:!0,get:function(){return s.getPreviousSibling}})},11:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createStylesheet=function(e){const t=document.createElement("style");return t.innerText=e,document.head.appendChild(t),t}},141:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.removeNodes=function(e){if(!e)return!1;const t=e instanceof Element?[e]:[...e];if(t.length>0)return t.forEach((e=>e.remove())),!0;return!1}},89:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getNextSibling=function(e,t){var n=e.nextElementSibling;if(!t)return n;for(;n;){if(t instanceof RegExp&&(t.test(n.className)||t.test(n.id)))return n;if("string"==typeof t&&n.matches(t))return n;n=n.nextElementSibling}}},457:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getPreviousSibling=function(e,t){var n=e.previousElementSibling;if(!t)return n;for(;n;){if(t instanceof RegExp&&(t.test(n.className)||t.test(n.id)))return n;if("string"==typeof t&&n.matches(t))return n;n=n.previousElementSibling}}}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var o=t[r]={exports:{}};return e[r](o,o.exports,n),o.exports}(()=>{const e=n(882);(new class{addStyles(){(0,e.createStylesheet)("\n            .dimmed .exchange-filter-item:not(.highlighted) {\n                display: none;\n            }\n\n            .dimmed .filter {\n                display: none;\n            }\n\n            /** Using a :not for this is very slow, this is much faster */\n            .dimmed .filter:has(.filter-match-subtext) {\n                display: table;\n            }\n\n            .dimmed .split {\n                display: none;\n            }\n        ")}main(){this.addStyles()}}).main()})()})();